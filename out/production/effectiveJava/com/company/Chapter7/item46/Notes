

// Using a toMap collector to make a map from string to enum

private static final Map<String, Operation> stringToEnum =
    Stream.of(values()).collect(
        toMap(Object::toString, e -> e));



// Collector to generate a map from key to chosen element for key

Map<Artist, Album> topHits = albums.collect(
   toMap(Album::artist, a->a, maxBy(comparing(Album::sales))));

// Collector to impose last-write-wins policy
toMap(keyMapper, valueMapper, (v1, v2) -> v2)


words.collect(groupingBy(word -> alphabetize(word)))

Map<String, Long> freq = words
        .collect(groupingBy(String::toLowerCase, counting()));


The most important collector factories are toList, toSet, toMap, groupingBy, and joining.
